specVersion: 0.0.1
description: Fearless SubQuery project
repository: 'https://github.com/soramitsu/fearless-subquery'
schema: ./schema.graphql
network:
  endpoint: wss://rpc.shiden.astar.network#
  types: {
  "Keys": "AccountId",
  "SmartContract": {
    "_enum": {
      "Evm": "H160",
      "Wasm": "AccountId"
    }
  },
  "EraIndex": "u32",
  "EraStakingPoints": {
    "total": "Balance",
    "stakers": "BTreeMap<AccountId, Balance>",
    "_formerStakedEra": "EraIndex",
    "claimedRewards": "Balance"
  },
  "EraRewardAndStake": {
    "rewards": "Balance",
    "staked": "Balance"
  }
}
dataSources:
  - name: main
    kind: substrate/Runtime
    startBlock: 196037

    # polkadot test slash bloks: 3570179

    # westend test stake block: 6000000
    # kusama test stake block: 8124580
    # polkadot test stake block: 5645004

    # polkadot test rewards block: 5704983
    mapping:
      handlers:
        - handler: handleHistoryElement
          kind: substrate/CallHandler
        - handler: handleReward
          kind: substrate/EventHandler
          filter:
            module: staking
            method: Reward
        - handler: handleRewarded
          kind: substrate/EventHandler
          filter:
            module: staking
            method: Rewarded
        - handler: handleSlash
          kind: substrate/EventHandler
          filter:
            module: staking
            method: Slash
        - handler: handleSlashed
          kind: substrate/EventHandler
          filter:
            module: staking
            method: Slashed
        - handler: handleBonded
          kind: substrate/EventHandler
          filter:
            module: staking
            method: Bonded
        - handler: handleUnbonded
          kind: substrate/EventHandler
          filter:
            module: staking
            method: Unbonded
        - handler: handleTransfer
          kind: substrate/EventHandler
          filter:
            module: balances
            method: Transfer
        - handler: handleTransferKeepAlive
          kind: substrate/EventHandler
          filter:
            module: balances
            method: transfer_keep_alive
        - handler: handleNewEra
          kind: substrate/EventHandler
          filter:
            module: staking
            method: StakingElection
        - handler: handleStakersElected
          kind: substrate/EventHandler
          filter:
            module: staking
            method: StakersElected
